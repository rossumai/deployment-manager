# Rossum Queue Documentation

## Queue Overview

| Queue Name | Queue ID | Workspace | Email |
|------------|----------|-----------|-------|
| S2K PO Inbox | 1740142 | [831083](https://us.api.rossum.ai/v1/workspaces/831083) | inbox-s2k-ce2b7b@us.app.rossum.ai |

### Queue Usage Description

The S2K PO Inbox queue is designed to process purchase order-related documents. It handles incoming documents via email, which are then processed through AI extraction and human review. The queue implements several specialized functions:

1. Document splitting for multi-page documents containing multiple purchase orders
2. Purchase order number validation against a master data hub
3. Identification and special handling of dropship orders
4. Automatic labeling based on routing flags
5. Capturing document receipt dates

The queue is part of an S2K purchase order processing workflow, with capabilities to handle both standard POs and special cases like dropship orders.

## Summary of Extensions

1. **Document Splitting (702347)** - Automatically splits multi-document files into individual documents by identifying document boundaries through specific text phrases like "REMITTANCE ADVICE", "This Memorandum", and "Bill of Lading".

2. **Master Data Hub (578954)** - Validates purchase order numbers against a database of POs in the 's2k_purchase_orders' dataset and identifies dropship orders.

3. **Upload Fields from Inbox (645890)** - Captures specific field values from confirmed annotations and stores them in the annotation's metadata for later use, including "order_id_manual" and "notes" fields.

4. **Date of Receipt to Field (748268)** - Populates the document_arrived_at field with the arrival date from the document metadata when a document is initialized.

5. **Assigning Labels (701086)** - Automatically assigns or removes labels based on the value of the routing_flag field, specifically managing label 189 for non-S2K documents.

## Summary of Fields

### Purchase Order Information

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| order_id | PO Number | Represents the purchase order identification extracted from the document | captured | string | Optional | Visible |
| order_id_manual | PO Number (Manual) | Allows users to manually enter a purchase order number that may not be automatically detected | manual | string | Optional | Visible |
| order_id_normalized | PO Number (Normalized) | Extracts and normalizes a PO number by taking only the numeric digits and keeping just the last 7 digits | formula | string | Optional | Hidden |
| order_match | PO Number (Match) | Result of matching the normalized PO number against the s2k_purchase_orders dataset | data | string | Optional | Visible |

### Document Routing and Processing

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| routing_flag | Routing Flag | Determines document routing based on order match and dropship status | formula | string | Optional | Visible |
| document_arrived_at | Document Arrived At | Records when a document was received in the system | data | string | Optional | Hidden |

### Additional Information

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| notes | Notes | Reviewer's notes for adding additional comments or observations | manual | string | Optional | Visible |

 ## 4. Extensions documentation
### (S2K PO) - Document Splitting (702347)

## Summary
This extension automatically splits multi-document files into individual documents based on configurable text search rules. It identifies document boundaries by searching for specific phrases like "REMITTANCE ADVICE", "This Memorandum", and "Bill of Lading".

## Logic
The extension uses text search rules to identify where to split documents:

1. **Rule Type**: All rules are configured as `text_search` with suggestion enabled
2. **Split Triggers**:
   - When "REMITTANCE ADVICE" is found (with tolerance of 1), split before this page
   - When "This Memorandum" is found (with tolerance of 1), split before this page
   - When "Bill of Lading" is found (with tolerance of 1), split before this page
3. **Tolerance**: All rules have a tolerance value of 1, allowing for minor text variations
4. **Split Position**: All rules are configured to split before the page containing the trigger phrase

## Active Queues
- S2K PO Inbox (1740142)

## Events
- annotation_content.initialize

## Related Extensions
None specified (no extensions listed in the 'run_after' attribute)

### Master Data Hub (S2K PO Inbox & Dropship Matching) (578954)

**Summary**: This extension matches purchase order numbers from invoices against a database of purchase orders in the 's2k_purchase_orders' dataset. It validates the order ID and also identifies if the PO is a dropship order.

#### Logic:

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|-------------------|----------------|
| PO matching | s2k_purchase_orders | PO Number | order_match, dropship_flag_match | No match: default value<br>One match: best_match<br>Multiple matches: best_match |

#### Active Queues:
- S2K PO Inbox (1740142)
- S2K PO Dropship (1747529)

#### Related Extensions:
None (no extensions listed in 'run_after' attribute)

### Upload Fields from Inbox (S2K PO) [645890]

**Summary:** This extension captures specific field values from a confirmed annotation and stores them in the annotation's metadata for later use.

**Logic:**
- Triggers when an annotation status changes to "confirmed"
- Extracts values for "order_id_manual" and "notes" fields
- Captures bounding box information for the "order_id" field
- Stores all extracted information in the annotation's metadata

**Active Queues:**
- S2K PO Inbox (1740142)
- S2K PO Dropship (1747529)

**Events:**
- annotation_status.changed

**Related Extensions:**
- None

I'll wait for you to provide the JSON documentation for the Rossum extension Document Sorting before generating the markdown documentation.

### Date of receipt to Field (S2K PO) (748268)

**Summary:** Populates the document_arrived_at field with the arrival date from the document metadata when a document is initialized.

**Logic:**
- Extracts the document's arrival date from the payload
- Sets the document_arrived_at field with this timestamp

**Active Queues:**
- S2K PO Inbox (1740142)
- S2K PO Dropship (1747529)
- S2K PO (1771791)

**Events:**
- annotation_content.initialize

**Related Extensions:**
- None

### Assigning Labels (S2K PO Inbox) (S2K PO) (701086)

**Summary:** This extension automatically assigns or removes labels based on the value of the routing_flag field. It compares the field value against conditions to determine if label 189 should be added or removed.

**Logic:**
- Monitors the routing_flag field value and compares it against configured conditions
- Adds label 189 when the field value matches the add_condition (non_s2k)
- Removes label 189 when the field value matches the remove_condition (if specified)
- Supports comparison operators (>, <, >=, <=, ==, !=) for numeric condition checking

**Active Queues:**
- S2K PO Inbox (1740142)

**Events:**
- annotation_content.updated
- annotation_content.initialize

**Related Extensions:**
- None



 ## 5. Data matching fields
### PO matching

This configuration is designed to populate the `order_match` field, which is labeled as "PO Number (Match)" in the UI.

**Data Source:**
- Dataset: `s2k_purchase_orders`

**Query Process:**
The configuration executes a single query that:
1. Searches for records in the `s2k_purchase_orders` dataset where:
   - The `PO Number` field matches the value in `{order_id_normalized}`
   - The `PO Number` field is not empty

**Result Handling:**
- If no matching records are found: The default value (empty string with label "---") is used
- If exactly one match is found: The value from the `PO Number` field of the matching record is selected
- If multiple matches are found: The value from the `PO Number` field of the first matching record is selected

The selected value from the `PO Number` field in the dataset is mapped to the `order_match` schema field.

