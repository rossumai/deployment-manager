# Rossum Queue Documentation: S2K PO

## Queue Overview

| Queue Name | Queue ID | Workspace | Email Address |
|------------|----------|-----------|--------------|
| S2K PO | 1771791 | S2K PO_[831083] | s2k-po-cf9399@us.app.rossum.ai |

### Queue Usage Description

The S2K PO queue is designed to process purchase orders for the S2K system. It handles document extraction, validation, and export of purchase order data. The queue integrates with the S2K system through various extensions that match invoice data against purchase orders, validate vendor information, calculate discounts, handle freight charges, and export data to an SFTP server. The queue supports complex business rules for pricing, quantity validation, and GL coding.

## Summary of Extensions

1. **Get Annotation ID into Schema (687199)**: Captures the annotation ID and stores it in the schema field during initialization.

2. **Freight Percentage Info Message (759357)**: Calculates freight percentage relative to total amount due and displays informational messages, requiring notes for high percentages.

3. **Add Discount Line (684928)**: Calculates total discount from line items and creates a virtual discount line with negative total amount for proper accounting.

4. **Master Data Hub (S2K PO Terms Matching) (670261)**: Matches vendor payment terms from master data based on selected vendor terms ID and populates payment term details.

5. **Master Data Hub (S2K PO PO & Receipt Matching) (593147)**: Matches invoice data against S2K purchase orders, vendors, locations, and receipts using order ID and item codes.

6. **Assigning Labels (Preferred Vendor) (704652)**: Automatically assigns or removes a "Preferred Vendor" label based on the value of the preferred_vendor_match field.

7. **Trigger Refresh (766700)**: Triggers another hook (578986) on a scheduled basis every 10 minutes.

8. **Master Data Hub (S2K PO Preferred Vendor) (689103)**: Checks if a vendor is preferred by matching vendor ID against a list of preferred vendors.

9. **Add Line Charges to Header (712691)**: Aggregates line item charges with specific GL codes and updates corresponding header fields.

10. **Master Data Hub (S2K PO) (GL Coding) (689106)**: Matches GL codes from the s2k_po_gl_codes dataset based on branch ID and preselected GL code.

11. **Business Rules Validation - S2K PO (726860)**: Validates that either internal notes are provided or exported item quantity doesn't exceed allowed threshold.

12. **Download PO BB into Schema (645889)**: Updates annotation fields with data from bounding boxes stored in the annotation's metadata.

13. **Export To SFTP (646792)**: Exports extracted data and documents from Rossum to a specified SFTP server.

14. **Refresh Documents (771116)**: Checks for documents in review with PO numbers and updates receipt flag status based on matching records.

15. **Master Data Hub (S2K PO UoM Ratio) (689137)**: Retrieves unit of measure ratios from master data based on item order ID.

16. **Master Data Hub (S2K PO) (DEPT Coding) (741617)**: Matches department codes by checking branch ID and GL code against records in the s2k_po_gl_codes dataset.

17. **Create Export CSV (645857)**: Generates a CSV export file for purchase orders with header fields and line items in a structured format.

18. **Receipt Checking (578986)**: Configured to run on a schedule but effectively inactive due to "never_true" target value condition.

19. **Master Data Hub (S2K PO Vendor) (592634)**: Matches vendor information from invoices against a vendor database using sender ID, name, address, and phone.

20. **Get Document ID into Schema (687184)**: Captures document ID from incoming payload and stores it in the schema field.

21. **Save Invoice Item Code <> PO Item Code (713109)**: Saves associations between invoice item codes and PO item codes for future reference.

22. **Assigning Labels (Rejecting CMs) (724570)**: Adds or removes a specific label to annotations based on the rejected_status field value.

23. **Download Manual PO Number and Notes (703124)**: Retrieves manual PO number and notes from annotation metadata and sets them as field values.

24. **Master Data Hub (S2K PO GL by Description Search) (689194)**: Searches for GL codes by matching item descriptions from the document.

25. **Duplicate Handling (699804)**: Detects duplicate purchase orders by comparing document date, amount, vendor ID, document ID, and file hash.

26. **Save UOM Ratios (685961)**: Saves unit of measure ratios between order and invoice quantities for future reference.

27. **Date of receipt to Field (748268)**: Populates the document_arrived_at field with the arrival date of the document.

28. **Save confirmed_by Email (687183)**: Retrieves the email of the user who confirmed/exported the document and saves it to the confirmed_by field.

29. **Calculating Discounts (670292)**: Analyzes payment terms to extract discount information and payment schedules.

30. **Add Inventory Variances (718139)**: Calculates price and quantity variances between purchase order and invoice line items.

## Summary of Fields

### Document Identification

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| document_id | Invoice Number | The unique identifier assigned to an invoice | captured | string | Optional | Visible |
| original_document_id | Original Document ID | Stores the original identifier of the document | data | string | Optional | Hidden |
| annotation_id | Annotation ID | Unique identifier for an annotation | data | string | Optional | Hidden |
| invoice_number_normalized | Invoice Number (Exported) | Normalized invoice number for export | formula | string | Optional | Visible |

### Purchase Order Information

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| order_id | PO Number | Purchase order identification extracted from the document | captured | string | Optional | Visible |
| order_id_manual | PO Number (Manual) | Allows manual entry of a purchase order number | manual | string | Optional | Visible |
| order_id_normalized | PO Number (Normalized) | Normalized purchase order number | formula | string | Optional | Hidden |
| order_id_match | PO Number (Match) | Matched purchase order number from the system | data | enum | Optional | Visible |
| order_location_match | Location (Match) | Location matched from the purchase order | data | enum | Optional | Visible |
| order_dropship_flag_match | Dropship Flag (Match) | Flag indicating if the order is a dropship | data | enum | Optional | Hidden |
| order_vendor_match | Vendor (Match) | Vendor matched from the purchase order | data | enum | Optional | Visible |
| order_vendor_name_match | Vendor Name (Match) | Vendor name matched from the system | data | enum | Optional | Visible |
| order_vendor_terms_match | PO Vendor Terms (Match) | Vendor terms matched from the purchase order | data | enum | Optional | Visible |
| branch_id | Branch ID | Branch identifier for the transaction | data | enum | Optional | Visible |

### Vendor Information

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| selected_vendor | Selected Vendor | Indicates vendor information source (fixed as "from PO") | formula | enum | Optional | Hidden |
| selected_vendor_id | Selected Vendor ID | ID of the selected vendor | formula | string | Optional | Hidden |
| vendor_match | Vendor (Match) | Matched vendor from the system | data | enum | Optional | Visible |
| vendor_name_match | Vendor Name (Match) | Matched vendor name from the system | data | enum | Optional | Visible |
| preferred_vendor_match | Preferred Vendor (Match) | Indicates if the vendor is preferred | data | enum | Optional | Hidden |

### Payment Terms

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| selected_terms | Selected Terms | Fixed value "vendor" | formula | enum | Optional | Hidden |
| selected_terms_id | Selected Terms ID | ID of the selected terms | formula | string | Optional | Hidden |
| selected_vendor_terms_id | Selected Vendor Terms ID | ID of the vendor terms | formula | string | Optional | Hidden |
| vendor_terms_match | Vendor Terms (Match) | Matched vendor terms from the system | data | enum | Optional | Visible |
| vendor_terms_description | Vendor Terms Description | Description of the vendor terms | data | enum | Optional | Visible |
| vendor_discount_size | Vendor Terms: Discount Percentage | Discount percentage from vendor terms | data | enum | Optional | Visible |
| vendor_discount_period | Vendor Terms: Discount Period | Discount period from vendor terms | data | enum | Optional | Visible |
| vendor_discount_day_of_month | Vendor Terms: Day of Month Discount | Day of month for discount from vendor terms | data | enum | Optional | Visible |
| vendor_discount_beginning_month | Vendor Terms: Discount Beginning Month | Beginning month for discount from vendor terms | data | enum | Optional | Visible |
| vendor_net_period | Vendor Terms: Net Period | Net payment period from vendor terms | data | enum | Optional | Visible |
| vendor_net_day_of_month | Vendor Terms: Day of Month Net | Day of month for net payment from vendor terms | data | enum | Optional | Visible |
| vendor_net_beginning_month | Vendor Terms: Net Beginning Month | Beginning month for net payment from vendor terms | data | enum | Optional | Visible |
| discount_term_flag | Discount Term Flag | Indicates the type of payment term | formula | string | Optional | Hidden |

### Dates

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| date_issue | Document Date | Date when the document was issued | captured | date | Required | Visible |
| discount_due_date | Due Date for Discount | Due date for receiving a discount | formula | date | Optional | Visible |
| net_due_date | Due Date for Net | Due date for net payment | formula | date | Optional | Visible |
| vendor_discount_due_date | Vendor Due Date for Discount | Calculated date for vendor discount | formula | date | Optional | Hidden |
| vendor_net_due_date | Vendor Due Date for Net | Calculated due date for vendor payment | formula | date | Optional | Hidden |
| document_arrived_at | Document Arrived At | When the document was received | data | string | Optional | Hidden |

### Financial Information

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| amount_due | Invoice Amt (Captured) | Final amount to be paid | captured | number | Required | Visible |
| amount_due_export | Invoice Amt. (S2K export) | Calculated total invoice amount for export | formula | number | Optional | Visible |
| subtotal | Subtotal (Calculated) | Sum of all line items with matching PO ID | formula | number | Optional | Hidden |
| amount_discountable | Discountable Amount | Amount eligible for discounting | formula | number | Optional | Hidden |
| cash_discount | Cash Discount | Cash discount amount | formula | number | Optional | Visible |
| cash_discount_gl_code | Cash Discount GL | GL code for cash discounts (fixed as "510000") | formula | string | Optional | Hidden |
| vendor_discount_calculated | Vendor Cash Discount | Calculated vendor cash discount amount | formula | number | Optional | Hidden |
| currency | Currency | Currency for payment | captured | enum | Optional | Hidden |

### Charges and Discounts

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| trade_discount | Trade Discount | Discount based on trade status | captured | number | Optional | Visible |
| misc_charges | Misc Charges | Additional miscellaneous charges | captured | number | Optional | Visible |
| misc_charges_from_lines | Misc Charges From Lines | Total miscellaneous charges from line items | data | number | Optional | Hidden |
| misc_charges_export | Misc Charges Export | Calculated miscellaneous charges for export | formula | number | Optional | Hidden |
| freight | Freight | Cost for transporting goods | captured | number | Optional | Visible |
| freight_from_lines | Freight From Lines | Freight amount calculated from line items | data | number | Optional | Hidden |
| freight_export | Freight Export | Calculated freight cost for export | formula | number | Optional | Hidden |
| dropship_freight_from_lines | Dropship Freight From Lines | Freight costs for dropshipped orders | data | number | Optional | Hidden |
| dropship_freight_export | Dropship Freight Export | Calculated dropship freight for export | formula | number | Optional | Hidden |
| merchant_tax | Merchant Tax | Tax charged by the merchant | captured | number | Optional | Visible |
| merchant_tax_from_lines | Merchant Tax From Lines | Tax amount calculated from line items | data | number | Optional | Hidden |
| merchant_tax_export | Merchant Tax Export | Calculated merchant tax for export | formula | number | Optional | Hidden |
| retention_tax | Retention Tax | Tax withheld from payment | captured | number | Optional | Visible |
| retention_tax_from_lines | Retention Tax From Lines | Retention tax calculated from line items | data | number | Optional | Hidden |
| retention_tax_export | Retention Tax Export | Calculated retention tax for export | formula | number | Optional | Hidden |
| backhaul_allowance | Backhaul Allowance | Amount for return transportation | captured | number | Optional | Visible |
| backhaul_allowance_from_lines | Backhaul Allowance From Lines | Backhaul allowance from line items | data | number | Optional | Hidden |
| backhaul_allowance_export | Backhaul Allowance Export | Calculated backhaul allowance for export | formula | number | Optional | Hidden |
| plate_charge | Printing/Plate Charge | Charge for printing or plate production | captured | number | Optional | Visible |
| plate_charge_from_lines | Plate Charge From Lines | Plate charges calculated from line items | data | number | Optional | Hidden |
| plate_charge_export | Plate Charge Export | Calculated plate charge for export | formula | number | Optional | Hidden |
| pallet_charge_from_lines | Pallet Charge From Lines | Pallet charges calculated from line items | data | number | Optional | Hidden |
| pallet_charge_export | Pallet Charge Export | Calculated pallet charge for export | formula | number | Optional | Hidden |
| rebate | Rebate | Discount or reduction offered | captured | number | Optional | Visible |
| rebate_from_lines | Rebate From Lines | Rebate amount calculated from line items | data | number | Optional | Hidden |
| rebate_export | Rebate Export | Calculated rebate for export | formula | number | Optional | Hidden |
| purchase_discount_from_lines | Purchase Discount From Lines | Total discount from purchase lines | data | number | Optional | Hidden |
| purchase_discount_export | Purchase Discount Export | Calculated purchase discount for export | formula | number | Optional | Hidden |

### Line Item Information

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| item_code | Item No | SKU, EAN, custom code or line number | datapoint | string | Optional | Visible |
| item_code_normalized | Code (Normalized) | Cleaned version of the item code | formula | string | Optional | Hidden |
| item_description | Description | Details about the item or service | manual | string | Optional | Visible |
| item_quantity | Quantity (Captured) | Quantity of the item | number | number | Optional | Visible |
| item_quantity_export | Quantity (into S2K) | Calculated quantity for export | formula | number | Optional | Visible |
| item_amount | Unit Price (Captured) | Unit price amount from invoice | datapoint | number | Optional | Visible |
| item_amount_export | Unit Price (into S2K) | Calculated unit price for export | formula | number | Optional | Visible |
| item_amount_total | Total Amount (Captured) | Total amount for all items | datapoint | number | Optional | Visible |
| item_amount_total_export | Total Amount (Controlled) | Calculated total amount for export | formula | number | Optional | Visible |
| item_match_po_flag | Match PO | Determines if item should match a PO | formula | enum | Optional | Visible |
| item_order_id_override | PO Line (Override) | Manual override for PO line | manual | enum | Optional | Visible |
| item_order_id_override_normalized | Item Order ID Override Normalized | First part of the item order ID override | formula | string | Optional | Hidden |
| flag_virtual_discount_line | Flag Virtual Discount Line | Identifies virtual discount lines | data | string | Optional | Hidden |

### PO Matching Fields

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| item_order_match | PO Item (Match) | Matched PO item from the system | data | enum | Optional | Visible |
| item_order_description_match | PO Description (Match) | Description matched from PO | data | enum | Optional | Visible |
| item_order_id_match | PO Item Number (Match) | Item number matched from PO | data | enum | Optional | Visible |
| item_order_line_number | PO Line Number (Match) | Line number matched from PO | data | enum | Optional | Visible |
| item_quantity_match | PO Quantity (Match) | Quantity matched from PO | data | enum | Optional | Visible |
| item_amount_base_match | PO Unit Price (Match) | Unit price matched from PO | data | enum | Optional | Visible |
| item_po_total | PO Total (Calculated) | Calculated PO total amount | formula | number | Optional | Hidden |
| item_order_amount_total_calculated | PO Total (Calculated) | Calculated total PO amount | formula | number | Optional | Hidden |

### Receipt and Accrual Information

| ID | Label | Description | Field Type | Data Type | Required/Optional | Visible/Hidden |
|----|-------|-------------|------------|-----------|-------------------|----------------|
| receipts_flag | Receipts Flag | Indicates if receipts have been received | formula | string | Optional | Hidden |
| receipts_flag_extension | Receipts Flag Extension | Flag related to receipts processing | data | string | Optional | Visible |
| receipts_flag_match | Receipts Flag (Match) | Matched receipt flag from the system | data | enum | Optional | Hidden |
| item_receipt_id_match | Receipt Item (Match) | Matched receipt item from the system | data | enum | Optional | Visible |
| item_quantity_received_match | Received Quantity (Match) | Received quantity matched from system | data | enum | Optional | Visible |
| item_receipt_uom_match | Receipt UOM (Match) | Unit of measure matched from receipt | data | enum | Optional | Visible |
| item_receipt_line_number_match | Receipt Line Number (Match) | Line number matched from receipt | data | enum | Optional | Visible |
| item_receipt_control_number_match | Receipt Control Number (Match) | Control number matched from receipt | data | enum | Optional | Visible |
| item_quantity_open | Open Quantity (Match) | Open quantity matched from system | data | enum | Optional | Visible |
| item_accrual_line_number_match | Accrual File Seq Number (Match) | Sequence number matched from accrual | data | enum | Optional | Visible |
| item_quantity_invoiced | Prior Accrued Quantity (Match) | Previously accrued quantity |

 ## 4. Extensions documentation
### Get Annotation ID into Schema (S2K PO) (687199)

**Summary:** This extension captures the annotation ID and stores it in the schema field. It runs during initialization of annotation content.

**Logic:**
- Extracts the annotation ID from the payload
- Assigns the ID to a field named "annotation_id" in the schema

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.initialize

**Related Extensions:**
- None

### Freight Percentage Info Message (S2K PO) (759357)

**Summary:** Calculates the freight percentage relative to the total amount due and displays an informational message. If the freight percentage exceeds 5%, it requires a note to be entered.

**Logic:**
- Calculates the percentage of freight costs relative to the total amount due
- Displays an informational message showing the freight percentage
- Shows an error message if the freight percentage is greater than 5% and no note has been provided

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.initialize
- annotation_content.updated
- annotation_content.started

**Related Extensions:**
- None

### Add Discount Line (S2K PO) (684928)

**Summary:** Calculates total discount from line items and creates or updates a virtual discount line with the negative total amount. The extension ensures proper accounting for discounts in S2K purchase orders.

**Logic:**
- Calculates the total discount by summing the absolute values of all discount amounts in line items
- If a virtual discount line already exists, it removes it to avoid duplication
- Creates a new virtual discount line with negative total discount amount if discounts exist
- Sets specific GL code (510000) and department code (00) for the discount line
- Uses the branch ID from existing line items for the discount line

**Active Queues:** S2K PO (1771791)

**Events:**
- annotation_content.export

**Related Extensions:** None

### Master Data Hub (S2K PO Terms Matching) (670261)

**Summary**: This extension matches vendor payment terms from a master data source based on the selected vendor terms ID. When a match is found, it populates various payment term details including discount information and net payment periods.

**Logic**:

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|-------------------|----------------|
| Vendor Payment Terms Match | payment_terms | Payment Terms | vendor_terms_match, vendor_terms_description, vendor_discount_size, vendor_discount_period, vendor_discount_day_of_month, vendor_discount_beginning_month, vendor_net_period, vendor_net_day_of_month, vendor_net_beginning_month | No match: select default<br>One match: select best_match<br>Multiple matches: select best_match with warning message |

**Active Queues**: S2K PO (1771791)

**Related Extensions**:
- Master Data Hub (S2K PO Vendor) (592634)
- Master Data Hub (S2K PO PO & Receipt Matching) (593147)

### Master Data Hub (S2K PO PO & Receipt Matching)

**Summary**: This extension matches invoice data against S2K purchase orders, vendors, locations, and receipts. It uses order ID, item codes, and descriptions to find matching PO lines and retrieves related vendor information, receipt quantities, and accrual data.

**Logic**:

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|------------------|----------------|
| PO header matching | s2k_purchase_orders | PO Number | order_id_match, order_vendor_match, order_dropship_flag_match, order_location_match | No match: default<br>One match: best_match<br>Multiple matches: best_match |
| PO Vendor name and terms matching | vendors | Supplier Number | order_vendor_name_match, order_vendor_terms_match | No match: default<br>One match: best_match<br>Multiple matches: default with warning |
| Branch header matching | s2k_locations | Location Number | branch_id | No match: default<br>One match: best_match<br>Multiple matches: default with warning |
| Receipt flag header matching | s2k_receipts | PO Number | receipts_flag_match | No match: default<br>One match: best_match<br>Multiple matches: best_match |
| PO Line Override Matching | s2k_purchase_orders | PO Number, Item Number, PO Line Number | item_order_id_override | No match: default<br>One match: default<br>Multiple matches: default |
| PO Line Matching | s2k_purchase_orders, associations_s2k_item_codes | PO Number, Item Number, Vendor Item Number, Description 1, PO Line Number | item_order_match, item_order_description_match, item_order_id_match, item_order_line_number, item_quantity_match, item_amount_base_match | No match: warning<br>One match: best_match<br>Multiple matches: default with warning |
| Received quantity + UOM LineItem Matching | s2k_receipts | PO Number, Item Number, Receipt Quantity, Description 1, Unit of Measure, Line/Seq Number, Receipt Control Number | item_receipt_id_match, item_quantity_received_match, item_receipt_uom_match, item_receipt_line_number_match, item_receipt_control_number_match | No match: warning<br>One match: best_match<br>Multiple matches: default |
| Invoiced Quantity (Accrual) LineItem Matching | s2k_accruals | PO Number, Item Number, Open Quantity, File Sequence | item_quantity_open, item_accrual_line_number_match | No match: default<br>One match: best_match<br>Multiple matches: default with warning |

**Active Queues**: S2K PO (1771791)

**Related Extensions**:
- Download PO BB into Schema (S2K PO) (645889)
- Download Manual PO Number and Notes (S2K PO) (703124)

### Assigning Labels (Preferred Vendor) (S2K PO) [704652]

**Summary:** This extension automatically assigns or removes a specific label (ID: 94) to annotations based on the value of the "preferred_vendor_match" field, comparing it against configured conditions.

**Logic:**
- Checks the value of a specified field (preferred_vendor_match) against configured conditions
- Adds a label (ID: 94) when the field value meets the "add_condition" criteria
- Removes the label when the field value matches the "remove_condition" criteria
- Supports various comparison operators (>, <, >=, <=, ==, !=) for numeric condition evaluation

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.initialize
- annotation_content.updated

**Related Extensions:**
- Master Data Hub (S2K PO Preferred Vendor) (689103)

### Trigger Refresh (S2K PO) (766700)

**Summary:** This extension triggers another hook (ID: 578986) on a scheduled basis every 10 minutes.

**Logic:**
- Invokes another hook with ID 578986 using the Rossum API
- Runs on a cron schedule every 10 minutes (*/10 * * * *)

**Active Queues:**
- S2K PO (1771791)

**Events:**
- invocation.scheduled

**Related Extensions:**
- None

### Master Data Hub (S2K PO Preferred Vendor) (689103)

**Summary:** This extension checks if a vendor is a preferred vendor by matching the selected vendor ID against a list of preferred vendors. When a match is found, it flags the vendor as preferred.

**Logic:**

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|-------------------|----------------|
| Preferred Vendors (find vendor ID in a dedicated list) | preferred_vendors | VENDOR CODE | preferred_vendor_match | No match: Select default value<br>One match: Select best match<br>Multiple matches: Select best match with warning message |

**Active Queues:** S2K PO (1771791)

**Related Extensions:**
- Master Data Hub (S2K PO Vendor) (592634)
- Master Data Hub (S2K PO PO & Receipt Matching) (593147)

### Add Line Charges to Header (S2K PO) (712691)

**Summary:** This extension aggregates line item charges with specific GL codes and updates corresponding header fields. It calculates totals for various charge types based on matching branch ID, GL code, and department values.

**Logic:**
- Iterates through each charge type defined in settings
- For each charge type, sums up the total amount from matching line items based on branch ID, GL code, and department
- Updates the corresponding header field with the calculated total

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.updated
- annotation_content.initialize

**Related Extensions:**
- Master Data Hub (S2K PO) (DEPT Coding) (741617)

### Master Data Hub (S2K PO) (GL Coding) (689106)

**Summary:** This extension matches GL (General Ledger) codes from the s2k_po_gl_codes dataset based on branch ID and preselected GL code. It has two configurations: one for when a preselected GL code exists and another for when it doesn't.

**Logic:**

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|------------------|----------------|
| GL matching (preselection 201000) | s2k_po_gl_codes | branch, gl_code, description, item_branch_id_normalized, item_preselected_gl_code | item_gl_code_match | No match: error message<br>One match: best_match<br>Multiple matches: best_match |
| GL matching (no preselection schema_id = no best_match preselection) | s2k_po_gl_codes | branch, gl_code, description, item_branch_id_normalized, item_preselected_gl_code | item_gl_code_match | No match: error message<br>One match: best_match<br>Multiple matches: default |

**Active Queues:** S2K PO (1771791)

**Related Extensions:** Master Data Hub (S2K PO PO & Receipt Matching) (593147)

### Business Rules Validation - S2K PO (726860)

**Summary:** Validates that either internal notes are not empty or the exported item quantity does not exceed the item quantity multiplied by the order invoice quantity ratio match.

**Logic:**
- Automates compliance with business rules and enhances data validation processes
- Checks if notes are filled when the exported item quantity exceeds the allowed threshold based on item quantity and ratio match
- Displays an error message prompting users to note the buyer approving any variance

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.initialize
- annotation_content.started
- annotation_content.updated

**Related Extensions:**
- None

### Download PO BB into Schema (S2K PO) (645889)

**Summary:** Updates annotation fields with data from bounding boxes stored in the annotation's metadata.

**Logic:**
- Retrieves bounding box data from the annotation's metadata
- Finds corresponding fields in the annotation content by schema_id
- Updates the content and validation sources of these fields with the values from the bounding boxes

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.initialize

**Related Extensions:**
- None

### Export To SFTP (S2K PO) (646792)

**Summary:** This extension exports extracted data and documents from Rossum to a specified SFTP server. It sends CSV files containing annotation data to a designated folder on the SFTP server.

**Logic:**
- Connects Rossum with an SFTP server (sftp01.imperialdade.com)
- Exports extracted data and documents from Rossum to the target folder (/out/materials) on the SFTP server
- Creates CSV files with naming pattern "invoice_data-{annotation.id}.csv"

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.export

**Related Extensions:**
- Create Export CSV (S2K PO) (645857)

### Refresh Documents (S2K PO) (771116)

**Summary:** This extension checks for documents in review with PO numbers and updates their receipt flag status based on matching records found in the S2K receipts data storage collection.

**Logic:**
- Fetches all annotations with status 'to_review' or 'postponed' from the S2K PO queue
- For each annotation, extracts the PO number from the 'order_id_normalized' field
- Queries the data storage collection 's2k_receipts' to find matching PO records
- If a match is found, updates the 'receipts_flag_extension' field to "true"

**Active Queues:**
- S2K PO (1771791)

**Events:**
- invocation.manual

**Related Extensions:**
- None

I'll wait for you to provide the JSON documentation for the Rossum extension Document Sorting before generating the markdown documentation.

### Master Data Hub (S2K PO UoM Ratio) (689137)

**Summary:** This extension retrieves unit of measure ratios from a master data source based on the item order ID. It enhances extracted data by populating the item order invoice quantity ratio field with the corresponding ratio value from the master dataset.

#### Logic:

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|-------------------|----------------|
| Ratios | associations_s2k_uom_ratios | item_id | item_order_invoice_quantity_ratio_match | No match: select default<br>One match: select best_match<br>Multiple matches: select default |

#### Active Queues:
- S2K PO (1771791)

#### Related Extensions:
- Master Data Hub (S2K PO PO & Receipt Matching) (593147)

### Master Data Hub (S2K PO) (DEPT Coding) (741617)

**Summary**: This extension matches department codes by checking if the branch ID and GL code from the document match with records in the s2k_po_gl_codes dataset. It populates the item_dept_match field with the corresponding department code.

**Logic**:

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|-------------------|----------------|
| Dept matching | s2k_po_gl_codes | item_branch_id_normalized, item_gl_code_export | item_dept_match | No match: error message<br>One match: select best_match<br>Multiple matches: select default value |

**Active Queues**: S2K PO (1771791)

**Related Extensions**: Master Data Hub (S2K PO) (GL Coding) (689106)

### Create Export CSV (S2K PO) (645857)

#### Summary:
This extension generates a CSV export file for purchase orders processed in the S2K system. It formats extracted data into a structured CSV with header fields and line items, including order details, financial information, and item-specific data.

#### Fields Used:
- invoice_number_normalized
- order_id_match
- order_location_match
- date_issue
- amount_due_export
- subtotal
- trade_discount
- misc_charges_export
- freight_export
- dropship_freight_export
- merchant_tax_export
- retention_tax_export
- backhaul_allowance_export
- plate_charge_export
- rebate_export
- pallet_charge_export
- purchase_discount_export
- inventory_quantity_variances
- inventory_price_variances
- amount_discountable
- selected_vendor_id
- selected_terms_id
- cash_discount
- cash_discount_gl_code
- discount_due_date
- net_due_date
- notes
- original_document_id
- annotation_id
- confirmed_by
- Line item fields:
  - item_order_description_match
  - item_order_id_match
  - item_order_line_number
  - item_quantity_export
  - item_quantity_received_match
  - item_receipt_uom_match
  - item_amount_export
  - item_amount_total_export
  - item_receipt_control_number_match
  - item_receipt_line_number_match
  - item_accrual_line_number_match

#### Logic:
The extension creates a CSV export with a specific format required by the S2K purchase order system. It generates a CSV file with a header row containing column names, followed by data rows for each line item in the purchase order. The template combines header-level information (like order ID, location, dates, and totals) with line-item details (like item descriptions, quantities, and amounts). Special handling is applied to text fields like notes and descriptions to escape special characters and remove line breaks.

#### Active Queues:
- S2K PO (1771791)

#### Events:
- annotation_content.export

#### Related Extensions:
- Add Discount Line (S2K PO) (684928)
- Save confirmed_by Email (S2K PO) (687183)
- Add Line Charges to Header (S2K PO) (712691)
- Add Inventory Variances (S2K PO) (718139)

### Receipt Checking (S2K PO) [578986]

**Summary:** This extension is configured to run on a schedule every 10 minutes for postponed documents in the S2K PO queue, but is effectively inactive as it uses a "never_true" target value condition.

**Logic:**
- Should not be used (as stated in the description)
- Configured to run on a schedule (every 10 minutes) but only triggers when target values match "never_true" (which will never happen)
- Targets the "receipts_flag" schema ID

**Active Queues:**
- S2K PO (1771791)

**Events:**
- invocation.manual

**Related Extensions:**
- None

### Master Data Hub (S2K PO Vendor) (592634)

**Summary:** This extension matches vendor information from invoices against a vendor database by using sender ID, name, address, and phone number. It attempts to find the best match through multiple query strategies with decreasing strictness.

**Logic:**

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|-------------------|----------------|
| Invoice vendor matching | vendors | Supplier Number, Name, Primary Address Street1, Primary Address Street2, Primary Address City, Phone Number | vendor_match, invoice_vendor_terms_match, vendor_name_match | No match: error message<br>One match: best_match<br>Multiple matches: best_match with warning message |

**Active Queues:** S2K PO (1771791)

**Related Extensions:** None (no extensions listed in 'run_after' attribute)

### Get Document ID into Schema (S2K PO) [687184]

**Summary:** Captures the document ID from the incoming payload and stores it in the schema field "original_document_id" for future reference.

**Logic:**
- Extracts the document ID from the payload and assigns it to the "original_document_id" field in the schema

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.initialize

**Related Extensions:**
- None

I'll wait for you to provide the JSON documentation before generating the markdown documentation for the Rossum extension Document Sorting.

### Save Invoice Item Code <> PO Item Code (S2K PO) (713109)

**Summary:** This extension saves the association between invoice item codes and PO item codes for S2K purchase orders. It stores these associations in a data storage collection for future reference and matching.

**Logic:**
- Triggers when an annotation status changes to confirmed, exported, or failed_export
- Extracts item_order_id_match (PO item code), item_code_normalized (invoice item code), selected_vendor_id, and item_description from line items
- Stores these values in a data storage collection named "associations_s2k_item_codes"
- Maintains unique records based on PO item code, invoice item code, and vendor ID
- Skips records where item_order_id_match is empty

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_status.changed

**Related Extensions:**
- None

### Assigning Labels (Rejecting CMs) (S2K PO) (724570)

**Summary:** Automatically adds or removes a specific label (ID: 189) to annotations based on the value of the "rejected_status" field, comparing it against configured conditions.

**Logic:**
- Evaluates the value of the "rejected_status" field against a specified condition
- Adds a label (ID: 189) to the annotation when the value meets the add_condition
- Removes the label when the value meets the remove_condition
- Supports various comparison operators (>, <, >=, <=, ==, !=) for numeric conditions

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.updated
- annotation_content.initialize

**Related Extensions:**
- None

### Download Manual PO Number and Notes (S2K PO) (703124)

**Summary:** Retrieves manual PO number and notes from the annotation metadata and sets them as field values in the document.

**Logic:**
- Extracts 'order_id_manual' and 'notes' values from the annotation metadata
- Assigns these values to the corresponding fields in the document

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.initialize

**Related Extensions:**
- None

### Master Data Hub (S2K PO GL by Description Search) (689194)

**Summary**: This extension searches for GL codes in the 's2k_descriptions_gl_codes' dataset by matching item descriptions from the document. When a single match is found, it populates the item_gl_by_description_match field with the GL code.

#### Logic:

| Configuration | Source dataset | Dataset fields | Target schema IDs | Select actions |
|---------------|----------------|----------------|-------------------|----------------|
| Find GL by description | s2k_descriptions_gl_codes | NAME, item_description | item_gl_by_description_match | No match: default value<br>One match: best match<br>Multiple matches: default value |

#### Active Queues:
- S2K PO (1771791)

#### Related Extensions:
None (no extensions listed in 'run_after')

### Duplicate Handling (S2K PO) (699804)

**Summary:** This extension detects duplicate purchase orders by comparing document date, amount due, vendor ID, document ID, and file hash. When duplicates are found, the system warns users and moves documents to postponed status.

**Active Queues:** S2K PO (1771791)

**Logic:**
- **Detection Rules:** 
  - Matches documents with identical date_issue, amount_due, selected_vendor_id, and document_id fields
  - OR matches documents with identical file hash
- **Scope:** Searches for duplicates within the queue across all statuses
- **Actions on Duplicate Detection:**
  - Displays warning message with duplicate IDs and detection date
  - Forwards annotation to "postponed" status
  - Marks document as duplicate
  - Stops further automation

**Related Extensions:** None

### Save UOM Ratios (S2K PO) (685961)

**Summary:** This extension saves unit of measure (UOM) ratios between order and invoice quantities for S2K purchase orders, storing them in a database for future reference.

**Logic:**
- Triggers when an annotation status changes to confirmed, exported, or failed_export
- Extracts vendor ID, item ID, and calculated ratio between order and invoice quantities
- Saves these ratios to a data storage collection called "associations_s2k_uom_ratios"
- Only saves ratios when the user has explicitly marked "Save Ratio" as "Yes"
- Uses vendor ID and item ID as unique natural keys to prevent duplicate entries
- Maintains the first occurrence of a ratio when duplicates are found (keep_first=True)

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_status.changed

**Related Extensions:**
- None

### Date of receipt to Field (S2K PO) (748268)

**Summary:** This extension populates the document_arrived_at field with the arrival date of the document when it is initialized.

**Logic:**
- Extracts the document's arrival date from the payload
- Sets this value to the document_arrived_at field in the annotation

**Active Queues:**
- S2K PO Inbox (1740142)
- S2K PO Dropship (1747529)
- S2K PO (1771791)

**Events:**
- annotation_content.initialize

**Related Extensions:**
- None

### Save confirmed_by Email (S2K PO) (687183)

**Summary:** Retrieves the email address of the user who confirmed/exported the document and saves it to the "confirmed_by" field.

**Logic:**
- When a document is exported, the extension gets the ID of the user who exported it
- Fetches the user details from Rossum API to obtain their email address
- Saves the email address to the "confirmed_by" field in the document
- If the user cannot be found or an error occurs, sets the value to "unknown"

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.export

**Related Extensions:**
- None

### Calculating Discounts (S2K PO) (670292)

**Summary:** Analyzes payment terms text to extract discount information and payment schedules, storing the structured data in the document_terms_llm_guess field.

**Logic:**
- Extracts payment terms from the document
- Parses the terms using an LLM to identify key payment information including:
  - Days to pay net amount
  - Days to get discount
  - Day of month for payments
  - Whether payments are from current or next month
  - Discount percentage
- Stores the structured JSON result in the document_terms_llm_guess field
- Only processes if payment terms are present

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.updated
- annotation_content.initialize

**Related Extensions:**
None

### Add Inventory Variances (S2K PO) (718139)

**Summary:** Calculates price and quantity variances between purchase order and invoice line items. The extension compares invoice quantities against allowed quantities and invoice unit prices against PO unit prices.

**Logic:**
- Calculates unit price and quantity variances for each line item
- Compares invoice quantities with maximum allowed quantities from PO
- Applies quantity ratio adjustments when specified
- Computes price variances by comparing invoice unit prices with PO unit prices
- Sums up all variances and stores them in header fields (inventory_price_variances and inventory_quantity_variances)

**Active Queues:**
- S2K PO (1771791)

**Events:**
- annotation_content.export

**Related Extensions:**
- None



 ## 5. Data matching fields
### Ratios

This configuration is used to populate the "Order Invoice Ratio (Match)" field.

**Data Source:**
- Dataset: `associations_s2k_uom_ratios`

**Query Process:**
The configuration executes a single query that searches for records in the `associations_s2k_uom_ratios` dataset where:
- `item_id` equals the value of the `item_order_id_match` field

**Data Mapping:**
- When a record is found, the `ratio` value from the dataset is mapped to the `item_order_invoice_quantity_ratio_match` field

**Result Handling:**
- If no matching record is found, a default value is used (empty string with label "---")
- If exactly one matching record is found, that record's `ratio` value is selected
- If multiple matching records are found, the default value is used (empty string with label "---")

This configuration helps determine the ratio between order and invoice quantities for matched items.

### PO Line Matching

This configuration populates the `item_order_match` field by matching purchase order line items from the `s2k_purchase_orders` dataset based on various criteria. The configuration runs only when `item_match_po_flag` is set to 'true'.

The configuration executes a series of MongoDB queries in sequence, attempting to find a match for the current invoice line item against purchase order line items. The queries are executed in the following order:

1. **Match by Override Dropdown Selection**: Looks for an exact match using the PO number (`order_id_normalized`) and an override item number (`item_order_id_override_normalized`).

2. **Match by Item Number**: Finds PO lines where the PO number matches `order_id_normalized` and the item number matches `item_code_normalized`.

3. **Match by Vendor Item Number**: Matches PO lines where the PO number matches `order_id_normalized` and the vendor item number matches `item_code_normalized`.

4. **Match by memorized Vendor Item Number**: Looks up item code associations in the `associations_s2k_item_codes` collection to find matches between vendor item codes and PO item codes for the selected vendor (`selected_vendor_id`).

5. **Match by Item Number in invoice description**: Finds PO lines where the PO number matches and the PO's item number appears in the invoice's `item_description`.

6. **Match by memorized Vendor Item Number -> PO Item Number in invoice description**: Uses the associations collection to find PO lines where the memorized vendor item code appears in the invoice's `item_description`.

7. **Match by invoice item code in PO description**: Finds PO lines where the invoice's `item_code_normalized` appears in the PO's "Description 1" field.

8. **Match by memorized Vendor Item Number -> PO Item Number in PO description**: Uses the associations collection to find PO lines where the memorized vendor item code appears in the PO's "Description 1" field.

9. **Match by description**: Uses fuzzy text matching to find PO lines where the "Description 1" field is similar to the invoice's `item_description`, with scoring and normalization to rank matches.

10. **Match by PO only**: As a fallback, returns all PO lines that match the PO number (`order_id_normalized`).

When a match is found, the field is populated with the value from the `dm_id` field, which is constructed as a concatenation of "Item Number", "PO Line Number", and in some cases the `item_description`.

The result actions define the behavior based on the query results:
- If no match is found, a warning message "No PO line match found" is displayed
- If exactly one match is found, that match is selected
- If multiple matches are found, the default value (empty string) is selected and a warning message "Multiple matches found" is displayed

The label displayed to the user follows the template: "(S2K:[Item Number] ~ V:[Vendor Item Number]) [Description 1] (q: [Order Quantity], l: [PO Line Number])"

### PO Vendor name and terms matching

This configuration populates the `order_vendor_name_match` field by querying the `vendors` dataset.

**Query Process:**
- The configuration queries the `vendors` dataset
- It searches for records where the `Supplier Number` field matches the value in `order_vendor_match`
- When a match is found, the `Name` field from the vendor record is mapped to `order_vendor_name_match`

**Result Handling:**
- If no match is found: The default value (empty string with label "---") is used
- If exactly one match is found: The `Name` value from the matching vendor record is used
- If multiple matches are found: The default value is used and a warning message "Multiple matches found" is displayed

This configuration helps to automatically populate the vendor name field based on a vendor number match from the vendors dataset.

### Vendor Payment Terms Match

This configuration populates the `vendor_terms_match` field by querying the `payment_terms` dataset.

**Query Process:**
- The configuration searches the `payment_terms` dataset for records where the "Payment Terms" field matches the value in `{selected_vendor_terms_id}`.
- Dataset keys referenced: "Payment Terms"

**Result Handling:**
- If no match is found: The default value (label: "---", value: "") is used
- If exactly one match is found: The best match (first result) is selected
- If multiple matches are found: The best match (first result) is selected, and a warning message "Multiple matches found" is displayed

**Field Population:**
- The value from the "Payment Terms" field in the matched record is used to populate the `vendor_terms_match` field
- The label displayed will be formatted using the "Description" field from the matched record

This configuration is part of a vendor payment terms validation process, checking if the selected vendor terms ID exists in the payment terms master data.

### Received quantity + UOM LineItem Matching

This configuration populates the `item_receipt_id_match` field by querying the `s2k_receipts` dataset to find matching receipt line items.

**Dataset**: `s2k_receipts`

**Queries**:
1. First query attempts to match by both PO number and item code:
   - Matches records where `PO Number` equals the value in `order_id_normalized` AND `Item Number` equals the value in `item_order_id_match`
   - Groups the results by `Item Number`
   - Calculates the total received quantity by summing the `Receipt Quantity` field (converted to double)
   - Adds the calculated total quantity to the original record

2. Second query (runs if first query returns no results) matches by PO number only:
   - Matches records where `PO Number` equals the value in `order_id_normalized`
   - Groups the results by `Item Number`
   - Calculates the total received quantity by summing the `Receipt Quantity` field (converted to double)
   - Adds the calculated total quantity to the original record

**Result Actions**:
- If no matches are found: Displays a warning message "No receipt match found"
- If exactly one match is found: Selects the best match (first result)
- If multiple matches are found: Selects the default value (empty string with label "---")

**Mapping**:
- The value from the `Item Number` field is stored in `item_receipt_id_match`
- The label is formatted as "[Description 1] ([Item Number])"

**Action Condition**:
- This configuration only runs if `item_match_po_flag` equals "true"

**Referenced Schema IDs**:
- `order_id_normalized`
- `item_order_id_match`
- `item_match_po_flag`

### PO header matching

This configuration is designed to match purchase order information from the `s2k_purchase_orders` dataset.

**Dataset**: `s2k_purchase_orders`

**Query Process**:
- The configuration runs a query that attempts to match records in the `s2k_purchase_orders` dataset where the `PO Number` field equals the value in the `order_id_normalized` field from the document being processed.
- The query groups the results by `PO Number` and returns the first matching document for each unique PO Number.

**Field Population**:
- The `order_id_match` field (labeled as "PO Number (Match)" in the UI) will be populated with the value from the `PO Number` field in the matched record.
- If no match is found, the field will be set to an empty string with a label of "---".
- If one match is found, the value from the first (best) match will be used.
- If multiple matches are found, the value from the first (best) match will be used.

This configuration helps to validate and match purchase order numbers from incoming documents against existing purchase orders in the system.

### Branch header matching

This configuration is designed to populate the `branch_id` field by matching data from the `s2k_locations` dataset.

**Dataset:** `s2k_locations`

**Query Process:**
- The configuration executes a query against the `s2k_locations` dataset
- It searches for records where the `Location Number` field equals the value in `{order_location_match}`
- When a match is found, the `Profit Center` value from the matched record is used to populate the `branch_id` field

**Result Handling:**
- If no match is found: The default value (empty string) is used with label "---"
- If exactly one match is found: That match's `Profit Center` value is selected
- If multiple matches are found: The default value is used (empty string) and a warning message "Multiple matches found" is displayed

This configuration essentially performs a lookup to find the appropriate branch ID based on a location number match.

### GL matching (preselection 201000)

This configuration populates the "GL Code" field (`item_gl_code_match`) by querying the `s2k_po_gl_codes` dataset. The query is executed only when `item_preselected_gl_code` is not empty, as specified in the action condition.

The query searches for GL codes where:
- The branch is either null or matches the `item_branch_id_normalized` value
- Creates a `dm_id` field by concatenating the GL code with the preselected GL code
- Adds an `is_preselected` field that is true when the GL code matches the preselected GL code
- Sorts the results with preselected items first

Dataset keys referenced:
- `gl_code`
- `description`
- `branch`

When a match is found (either one or multiple), the system selects the first result (best match) which, due to the sorting, would be the preselected GL code if it exists. If no match is found, an error message "No match found" is displayed.

### GL matching (no preselection schema_id = no best_match preselection)

This configuration also populates the "GL Code" field (`item_gl_code_match`) by querying the `s2k_po_gl_codes` dataset, but is executed only when `item_preselected_gl_code` is empty.

The query searches for GL codes where:
- The branch is either null or matches the `item_branch_id_normalized` value
- Creates a `dm_id` field by concatenating the GL code with the preselected GL code (which is empty in this case)

Dataset keys referenced:
- `gl_code`
- `description`
- `branch`

When exactly one match is found, the system selects it as the best match. If multiple matches are found, the default value (empty with label "---") is selected. If no match is found, an error message "No match found" is displayed.

### Invoiced Quantity (Accrual) LineItem Matching

This configuration populates the field `item_quantity_open` which represents the open quantity for matching items.

**Data Source:**
- Dataset: `s2k_accruals`

**Query Process:**
The configuration executes a single query that:
1. Matches records in the `s2k_accruals` dataset where:
   - `PO Number` equals the value in `order_id_normalized`
   - `Item Number` equals the value in `item_order_id_match`
2. Groups the results by `Item Number`
3. Calculates the sum of `Open Quantity` (converted to a double) for each group as `total_quantity_open`
4. Preserves the original document structure while adding the calculated `total_quantity_open` field

**Result Handling:**
- If no matches are found: Returns the default value (empty string with label "---")
- If exactly one match is found: Selects the `total_quantity_open` value from the matching record
- If multiple matches are found: Returns the default value and displays a warning message "Multiple matches found"

**Field Mapping:**
The `total_quantity_open` value from the query result is mapped to the `item_quantity_open` field in the target schema.

### Receipt flag header matching

This configuration is designed to populate the `receipts_flag_match` field by matching purchase order numbers from the `s2k_receipts` dataset.

**Dataset**: `s2k_receipts`

**Query Process**:
- The configuration executes a query on the `s2k_receipts` dataset
- It searches for records where the `PO Number` field matches the value in `{order_id_normalized}`
- The `PO Number` value from the matching record is mapped to the `receipts_flag_match` field

**Result Handling**:
- If no match is found: The default value is used (empty string with label "---")
- If one match is found: The `PO Number` value from the matching record is selected
- If multiple matches are found: The first matching `PO Number` value is selected

This configuration essentially flags whether a receipt exists in the system for a given order ID by populating the `receipts_flag_match` field with the matching PO number when found.

### Dept matching

This configuration is designed to match a department based on branch and GL code information from the `s2k_po_gl_codes` dataset.

**Dataset**: `s2k_po_gl_codes`

**Target Field**: `item_dept_match` (Dept)

**Query Process**:
1. **First Query**:
   - Converts `dept_str`, `branch_str`, and `gl_code_str` fields to string type
   - Matches records where either:
     - `branch_str` equals the value of `item_branch_id_normalized`, or
     - `branch_str` is empty or null
   - AND where `gl_code_str` equals the value of `item_gl_code_export`

2. **Second Query** (runs if first query returns no results):
   - Converts `branch_str` to string type
   - Matches records where either:
     - `branch_str` equals the value of `item_branch_id_normalized`, or
     - `branch_str` is empty or null

**Result Handling**:
- If no matches are found: Shows an error message "No match found"
- If exactly one match is found: Selects the best match (first record)
- If multiple matches are found: Uses the default value (empty string with label "---")

The value from the `dept` field in the matched record will be used to populate the `item_dept_match` field.

### Find GL by description

This configuration populates the field `item_gl_by_description_match` which is labeled as "GL by Description (Match)" in the UI.

**Data Source:**
- Dataset: `s2k_descriptions_gl_codes`

**Query Process:**
The configuration executes a single query that searches for records in the `s2k_descriptions_gl_codes` dataset where the `NAME` field matches the value from `item_description` field using a case-insensitive regular expression match.

**Referenced Fields:**
- `item_description` - Used in the regex pattern to match against the `NAME` field

**Result Handling:**
- If no matches are found: The default value is selected (empty string with label "---")
- If exactly one match is found: The value from the `GL` field of the matched record is selected
- If multiple matches are found: The default value is selected (empty string with label "---")

The selected value is then assigned to the `item_gl_by_description_match` field.

### Preferred Vendors (find vendor ID in a dedicated list)

This configuration populates the `Preferred Vendor (Match)` field by searching for a vendor ID in a dedicated list of preferred vendors.

**Source Dataset:** `preferred_vendors`

**Query Description:**
The configuration executes a MongoDB query that:
1. Searches the `preferred_vendors` dataset for records where the `VENDOR CODE` field matches the value in `{selected_vendor_id}`
2. Groups the results by `VENDOR CODE` and keeps the first matching record
3. Adds a field called `flag` with the value `"Y"` to the matching record

**Dataset Keys Referenced:**
- `VENDOR CODE` - Used to match against the selected vendor ID
- `flag` - Added field that indicates a match was found

**Result Handling:**
- If no match is found: The default value is selected (label: "---", value: "0")
- If exactly one match is found: The first match is selected, and the `flag` value ("Y") is assigned to the `preferred_vendor_match` field
- If multiple matches are found: The first match is selected, and a warning message "Multiple matches found" is displayed

The `preferred_vendor_match` field is populated with "Y" when the vendor ID exists in the preferred vendors list, otherwise it's set to "0".

