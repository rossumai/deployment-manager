{
  "id": 227692,
  "name": "Dummy Custom Function",
  "url": "https://rdttest.rossum.app/api/v1/hooks/227692",
  "active": true,
  "config": {
    "schedule": {
      "cron": ""
    },
    "app": null,
    "payload_logging_enabled": false,
    "runtime": "python3.8",
    "code": "\"\"\"\nThis example function does 2 things:\n1. Displays a warning message to the user for all the \"item_amount_total\" fields which exceed the predefined threshold\n2. Removes all dashes from the \"document_id\" field\n\nMore about custom functions - https://developers.rossum.ai/docs/how-to-use-serverless-functions\n\"\"\"\n\ndef rossum_hook_request_handler(payload: dict) -> dict:\n    \"\"\"\n    Obligatory main function\n    :param payload: differs for each event, see https://rdttest.rossum.app/api/docs/#webhook-events\n    :return: dictionary with messages to the user and operations that update the annotation content\n    \"\"\"\n    messages = []\n    operations = []\n\n    # Annotation content tree (see https://rdttest.rossum.app/api/docs/#annotation-data)\n    content: list = payload[\"annotation\"][\"content\"]\n\n    # Values over the threshold trigger a warning message\n    TOO_BIG_THRESHOLD = 1000000\n\n    # List of all datapoints with item_amount_total schema id\n    amount_total_column_datapoints: list = find_by_schema_id(content, \"item_amount_total\")\n\n    # Display warning message for all the \"item_amount_total\" fields exceeding the threshold\n    for amount_total_column_datapoint in amount_total_column_datapoints:\n        # Use normalized_value for comparing values of Date and Number fields\n        value = float(amount_total_column_datapoint[\"content\"][\"normalized_value\"] or 0)\n        if value >= TOO_BIG_THRESHOLD:\n            messages.append(\n                create_message(\n                    \"warning\", \"Value is too big\", amount_total_column_datapoint[\"id\"]\n                )\n            )\n\n    # There should be only one \"document_id\" datapoint\n    document_id_datapoint: dict = find_by_schema_id(content, \"document_id\")[0]\n\n    # Remove dashes from the \"document_id\" field\n    document_id: str = document_id_datapoint[\"content\"][\"value\"]\n    operations.append(\n        create_replace_operation(\n            document_id_datapoint[\"id\"], document_id.replace(\"-\", \"\")\n        )\n    )\n\n    return {\"messages\": messages, \"operations\": operations}\n\n# --- HELPER FUNCTIONS ---\n\ndef find_by_schema_id(content: list, schema_id: str) -> list:\n    \"\"\"\n    Return all datapoints matching a schema id.\n    :param content: annotation content tree (see https://rdttest.rossum.app/api/docs/#content-object)\n    :param schema_id: field's ID as defined in the extraction schema (see https://rdttest.rossum.app/api/docs/#document-schema)\n    :return: list of datapoints matching the schema ID\n    \"\"\"\n    accumulator = []\n    for node in content:\n        if node[\"schema_id\"] == schema_id:\n            accumulator.append(node)\n        elif \"children\" in node:\n            accumulator.extend(find_by_schema_id(node[\"children\"], schema_id))\n\n    return accumulator\n\n\ndef create_message(message_type: str, message_content: str, datapoint_id: int = None) -> dict:\n    \"\"\"\n    Create a message which will be shown to the user\n    :param message_type: type of the message, any of {info|warning|error}. Errors prevent confirmation in the UI.\n    :param message_content: message shown to the user\n    :param datapoint_id: id of the datapoint where the message will appear (None for \"global\" messages).\n    :return: dict with the message definition (see https://rdttest.rossum.app/api/docs/#annotation-content-event-response-format)\n    \"\"\"\n    return {\n        \"content\": message_content,\n        \"type\": message_type,\n        \"id\": datapoint_id,\n    }\n\n\ndef create_replace_operation(datapoint_id: int, new_value: str) -> dict:\n    \"\"\"\n    Replace the value of the datapoint with a new value.\n    :param datapoint_id: id of the datapoint to be changed\n    :param new_value: new value of the datapoint\n    :return: dict with replace operation definition (see https://rdttest.rossum.app/api/docs/#annotation-content-event-response-format)\n    \"\"\"\n    return {\n        \"op\": \"replace\",\n        \"id\": datapoint_id,\n        \"value\": {\n            \"content\": {\n                \"value\": new_value,\n            },\n        },\n    }",
    "third_party_library_pack": "default"
  },
  "test": {},
  "guide": null,
  "read_more_url": null,
  "extension_image_url": null,
  "type": "function",
  "metadata": {},
  "queues": [
    "https://rdttest.rossum.app/api/v1/queues/821440"
  ],
  "run_after": [
    "https://rdttest.rossum.app/api/v1/hooks/227691"
  ],
  "events": [
    "annotation_content.updated",
    "annotation_content.initialize"
  ],
  "settings": {},
  "settings_schema": null,
  "secrets": {},
  "extension_source": "custom",
  "sideload": [],
  "token_owner": null,
  "token_lifetime_s": null,
  "description": ""
}